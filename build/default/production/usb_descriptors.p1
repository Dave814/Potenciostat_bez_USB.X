Version 3.2 HI-TECH Software Intermediate Code
"196 usb\include\usb_ch9.h
[s S6 `uc 1 `uc 1 `ui 1 `uc 1 `uc 1 `uc 1 `uc 1 `ui 1 `ui 1 `ui 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S6 device_descriptor bLength bDescriptorType bcdUSB bDeviceClass bDeviceSubclass bDeviceProtocol bMaxPacketSize0 idVendor idProduct bcdDevice iManufacturer iProduct iSerialNumber bNumConfigurations ]
"75 usb_descriptors.c
[c E246 1 2 3 4 5 6 7 8 9 10 11 .. ]
[n E246 DescriptorTypes DESC_DEVICE DESC_CONFIGURATION DESC_STRING DESC_INTERFACE DESC_ENDPOINT DESC_DEVICE_QUALIFIER DESC_OTHER_SPEED_CONFIGURATION DESC_INTERFACE_POWER DESC_OTG DESC_DEBUG DESC_INTERFACE_ASSOCIATION  ]
"208 usb\include\usb_ch9.h
[s S7 `uc 1 `uc 1 `ui 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S7 configuration_descriptor bLength bDescriptorType wTotalLength bNumInterfaces bConfigurationValue iConfiguration bmAttributes bMaxPower ]
"221
[s S10 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S10 interface_descriptor bLength bDescriptorType bInterfaceNumber bAlternateSetting bNumEndpoints bInterfaceClass bInterfaceSubclass bInterfaceProtocol iInterface ]
"232
[s S11 `uc 1 `uc 1 `uc 1 `uc 1 `ui 1 `uc 1 ]
[n S11 endpoint_descriptor bLength bDescriptorType bEndpointAddress bmAttributes wMaxPacketSize bInterval ]
"62 usb_descriptors.c
[s S14 `S7 1 `S10 1 `S11 1 `S11 1 ]
[n S14 configuration_1_packet config interface ep ep1_out ]
"132
[c E263 0 1 2 3 .. ]
[n E263 EndpointAttributes EP_CONTROL EP_ISOCHRONOUS EP_BULK EP_INTERRUPT  ]
"160
[s S15 `uc 1 `uc 1 `ui 1 ]
[n S15 . bLength bDescriptorType lang ]
"166
[s S16 `uc 1 `uc 1 `ui -> 21 `i ]
[n S16 . bLength bDescriptorType chars ]
"172
[s S17 `uc 1 `uc 1 `ui -> 28 `i ]
[n S17 . bLength bDescriptorType chars ]
"178
[s S18 `uc 1 `uc 1 `ui -> 11 `i ]
[n S18 . bLength bDescriptorType chars ]
"184
[s S19 `uc 1 `uc 1 `ui -> 4 `i ]
[n S19 . bLength bDescriptorType chars ]
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;stdbool.h: 12: typedef unsigned char bool;
[; ;stdlib.h: 4: typedef int ptrdiff_t;
[; ;stdlib.h: 5: typedef unsigned size_t;
[; ;stdlib.h: 6: typedef unsigned short wchar_t;
[; ;stdlib.h: 16: extern int errno;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: int rem;
[; ;stdlib.h: 29: int quot;
[; ;stdlib.h: 30: } div_t;
[; ;stdlib.h: 31: typedef struct {
[; ;stdlib.h: 32: unsigned rem;
[; ;stdlib.h: 33: unsigned quot;
[; ;stdlib.h: 34: } udiv_t;
[; ;stdlib.h: 35: typedef struct {
[; ;stdlib.h: 36: long quot;
[; ;stdlib.h: 37: long rem;
[; ;stdlib.h: 38: } ldiv_t;
[; ;stdlib.h: 39: typedef struct {
[; ;stdlib.h: 40: unsigned long quot;
[; ;stdlib.h: 41: unsigned long rem;
[; ;stdlib.h: 42: } uldiv_t;
[; ;stdlib.h: 65: extern double atof(const char *);
[; ;stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;stdlib.h: 67: extern int atoi(const char *);
[; ;stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;stdlib.h: 69: extern long atol(const char *);
[; ;stdlib.h: 70: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 72: extern int rand(void);
[; ;stdlib.h: 73: extern void srand(unsigned int);
[; ;stdlib.h: 74: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 75: extern div_t div(int numer, int denom);
[; ;stdlib.h: 76: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 77: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 78: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 79: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 80: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 81: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 82: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 87: extern void * malloc(size_t);
[; ;stdlib.h: 88: extern void free(void *);
[; ;stdlib.h: 89: extern void * realloc(void *, size_t);
[; ;stdlib.h: 91: extern void abort(void);
[; ;stdlib.h: 92: extern void exit(int);
[; ;stdlib.h: 93: extern int atexit(void (*)(void));
[; ;stdlib.h: 94: extern char * getenv(const char *);
[; ;stdlib.h: 95: extern char ** environ;
[; ;stdlib.h: 96: extern int system(char *);
[; ;stdlib.h: 97: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 98: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 99: extern int abs(int);
[; ;stdlib.h: 100: extern long labs(long);
[; ;stdlib.h: 103: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 104: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 109: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 110: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 112: extern char * ftoa(float f, int * status);
[; ;usb.h: 46: struct setup_packet;
[; ;usb.h: 83: extern int16_t usb_application_get_string(uint8_t string_number, const void **ptr);
[; ;usb.h: 92: extern const struct device_descriptor this_device_descriptor;
[; ;usb.h: 110: extern const struct configuration_descriptor *usb_application_config_descs[];
[; ;usb.h: 350: void usb_init(void);
[; ;usb.h: 364: void usb_service(void);
[; ;usb.h: 375: uint8_t usb_get_configuration(void);
[; ;usb.h: 402: unsigned char *usb_get_in_buffer(uint8_t endpoint);
[; ;usb.h: 416: void usb_send_in_buffer(uint8_t endpoint, size_t len);
[; ;usb.h: 428: bool usb_in_endpoint_busy(uint8_t endpoint);
[; ;usb.h: 440: uint8_t usb_halt_ep_in(uint8_t ep);
[; ;usb.h: 453: bool usb_in_endpoint_halted(uint8_t endpoint);
[; ;usb.h: 466: bool usb_out_endpoint_has_data(uint8_t endpoint);
[; ;usb.h: 478: void usb_arm_out_endpoint(uint8_t endpoint);
[; ;usb.h: 490: uint8_t usb_halt_ep_out(uint8_t ep);
[; ;usb.h: 504: bool usb_out_endpoint_halted(uint8_t endpoint);
[; ;usb.h: 519: uint8_t usb_get_out_buffer(uint8_t endpoint, const unsigned char **buffer);
[; ;usb.h: 532: typedef void (*usb_ep0_data_stage_callback)(bool transfer_ok, void *context);
[; ;usb.h: 557: void usb_start_receive_ep0_data_stage(char *buffer, size_t len,
[; ;usb.h: 558: usb_ep0_data_stage_callback callback, void *context);
[; ;usb.h: 586: void usb_send_data_stage(char *buffer, size_t len,
[; ;usb.h: 587: usb_ep0_data_stage_callback callback, void *context);
[; ;usb_ch9.h: 59: enum PID {
[; ;usb_ch9.h: 60: PID_OUT = 0x01,
[; ;usb_ch9.h: 61: PID_IN = 0x09,
[; ;usb_ch9.h: 62: PID_SOF = 0x05,
[; ;usb_ch9.h: 63: PID_SETUP = 0x0D,
[; ;usb_ch9.h: 64: PID_DATA0 = 0x03,
[; ;usb_ch9.h: 65: PID_DATA1 = 0x0B,
[; ;usb_ch9.h: 66: PID_DATA2 = 0x07,
[; ;usb_ch9.h: 67: PID_MDATA = 0x0F,
[; ;usb_ch9.h: 68: PID_ACK = 0x02,
[; ;usb_ch9.h: 69: PID_NAK = 0x0A,
[; ;usb_ch9.h: 70: PID_STALL = 0x0E,
[; ;usb_ch9.h: 71: PID_NYET = 0x06,
[; ;usb_ch9.h: 72: PID_PRE = 0x0C,
[; ;usb_ch9.h: 73: PID_ERR = 0x0C,
[; ;usb_ch9.h: 74: PID_SPLIT = 0x08,
[; ;usb_ch9.h: 75: PID_PING = 0x04,
[; ;usb_ch9.h: 76: PID_RESERVED = 0x00,
[; ;usb_ch9.h: 77: };
[; ;usb_ch9.h: 83: enum DestinationType {
[; ;usb_ch9.h: 84: DEST_DEVICE = 0,
[; ;usb_ch9.h: 85: DEST_INTERFACE = 1,
[; ;usb_ch9.h: 86: DEST_ENDPOINT = 2,
[; ;usb_ch9.h: 87: DEST_OTHER_ELEMENT = 3,
[; ;usb_ch9.h: 88: };
[; ;usb_ch9.h: 94: enum RequestType {
[; ;usb_ch9.h: 95: REQUEST_TYPE_STANDARD = 0,
[; ;usb_ch9.h: 96: REQUEST_TYPE_CLASS = 1,
[; ;usb_ch9.h: 97: REQUEST_TYPE_VENDOR = 2,
[; ;usb_ch9.h: 98: REQUEST_TYPE_RESERVED = 3,
[; ;usb_ch9.h: 99: };
[; ;usb_ch9.h: 105: enum StandardControlRequest {
[; ;usb_ch9.h: 106: GET_STATUS = 0x0,
[; ;usb_ch9.h: 107: CLEAR_FEATURE = 0x1,
[; ;usb_ch9.h: 108: SET_FEATURE = 0x3,
[; ;usb_ch9.h: 109: SET_ADDRESS = 0x5,
[; ;usb_ch9.h: 110: GET_DESCRIPTOR = 0x6,
[; ;usb_ch9.h: 111: SET_DESCRIPTOR = 0x7,
[; ;usb_ch9.h: 112: GET_CONFIGURATION = 0x8,
[; ;usb_ch9.h: 113: SET_CONFIGURATION = 0x9,
[; ;usb_ch9.h: 114: GET_INTERFACE = 0xA,
[; ;usb_ch9.h: 115: SET_INTERFACE = 0xB,
[; ;usb_ch9.h: 116: SYNCH_FRAME = 0xC,
[; ;usb_ch9.h: 117: };
[; ;usb_ch9.h: 120: enum DescriptorTypes {
[; ;usb_ch9.h: 121: DESC_DEVICE = 0x1,
[; ;usb_ch9.h: 122: DESC_CONFIGURATION = 0x2,
[; ;usb_ch9.h: 123: DESC_STRING = 0x3,
[; ;usb_ch9.h: 124: DESC_INTERFACE = 0x4,
[; ;usb_ch9.h: 125: DESC_ENDPOINT = 0x5,
[; ;usb_ch9.h: 126: DESC_DEVICE_QUALIFIER = 0x6,
[; ;usb_ch9.h: 127: DESC_OTHER_SPEED_CONFIGURATION = 0x7,
[; ;usb_ch9.h: 128: DESC_INTERFACE_POWER = 0x8,
[; ;usb_ch9.h: 129: DESC_OTG = 0x9,
[; ;usb_ch9.h: 130: DESC_DEBUG = 0xA,
[; ;usb_ch9.h: 131: DESC_INTERFACE_ASSOCIATION = 0xB,
[; ;usb_ch9.h: 132: };
[; ;usb_ch9.h: 143: enum DeviceClassCodes {
[; ;usb_ch9.h: 144: DEVICE_CLASS_DEFINED_AT_INTERFACE_LEVEL = 0x0,
[; ;usb_ch9.h: 145: DEVICE_CLASS_MISC = 0xef,
[; ;usb_ch9.h: 146: DEVICE_CLASS_APPLICATION_SPECIFIC = 0xfe,
[; ;usb_ch9.h: 147: DEVICE_CLASS_VENDOR_SPECIFIC = 0xff,
[; ;usb_ch9.h: 148: };
[; ;usb_ch9.h: 151: enum EndpointAttributes {
[; ;usb_ch9.h: 152: EP_CONTROL = 0x0,
[; ;usb_ch9.h: 153: EP_ISOCHRONOUS = 0x1,
[; ;usb_ch9.h: 154: EP_BULK = 0x2,
[; ;usb_ch9.h: 155: EP_INTERRUPT = 0x3,
[; ;usb_ch9.h: 158: };
[; ;usb_ch9.h: 165: struct setup_packet {
[; ;usb_ch9.h: 166: union {
[; ;usb_ch9.h: 167: struct {
[; ;usb_ch9.h: 168: uint8_t destination : 5;
[; ;usb_ch9.h: 169: uint8_t type : 2;
[; ;usb_ch9.h: 170: uint8_t direction : 1;
[; ;usb_ch9.h: 171: };
[; ;usb_ch9.h: 172: uint8_t bmRequestType;
[; ;usb_ch9.h: 173: } REQUEST;
[; ;usb_ch9.h: 174: uint8_t bRequest;
[; ;usb_ch9.h: 175: uint16_t wValue;
[; ;usb_ch9.h: 176: uint16_t wIndex;
[; ;usb_ch9.h: 177: uint16_t wLength;
[; ;usb_ch9.h: 178: };
[; ;usb_ch9.h: 181: struct device_descriptor {
[; ;usb_ch9.h: 182: uint8_t bLength;
[; ;usb_ch9.h: 183: uint8_t bDescriptorType;
[; ;usb_ch9.h: 184: uint16_t bcdUSB;
[; ;usb_ch9.h: 185: uint8_t bDeviceClass;
[; ;usb_ch9.h: 186: uint8_t bDeviceSubclass;
[; ;usb_ch9.h: 187: uint8_t bDeviceProtocol;
[; ;usb_ch9.h: 188: uint8_t bMaxPacketSize0;
[; ;usb_ch9.h: 189: uint16_t idVendor;
[; ;usb_ch9.h: 190: uint16_t idProduct;
[; ;usb_ch9.h: 191: uint16_t bcdDevice;
[; ;usb_ch9.h: 192: uint8_t iManufacturer;
[; ;usb_ch9.h: 193: uint8_t iProduct;
[; ;usb_ch9.h: 194: uint8_t iSerialNumber;
[; ;usb_ch9.h: 195: uint8_t bNumConfigurations;
[; ;usb_ch9.h: 196: };
[; ;usb_ch9.h: 199: struct configuration_descriptor {
[; ;usb_ch9.h: 200: uint8_t bLength;
[; ;usb_ch9.h: 201: uint8_t bDescriptorType;
[; ;usb_ch9.h: 202: uint16_t wTotalLength;
[; ;usb_ch9.h: 203: uint8_t bNumInterfaces;
[; ;usb_ch9.h: 204: uint8_t bConfigurationValue;
[; ;usb_ch9.h: 205: uint8_t iConfiguration;
[; ;usb_ch9.h: 206: uint8_t bmAttributes;
[; ;usb_ch9.h: 207: uint8_t bMaxPower;
[; ;usb_ch9.h: 208: };
[; ;usb_ch9.h: 211: struct interface_descriptor {
[; ;usb_ch9.h: 212: uint8_t bLength;
[; ;usb_ch9.h: 213: uint8_t bDescriptorType;
[; ;usb_ch9.h: 214: uint8_t bInterfaceNumber;
[; ;usb_ch9.h: 215: uint8_t bAlternateSetting;
[; ;usb_ch9.h: 216: uint8_t bNumEndpoints;
[; ;usb_ch9.h: 217: uint8_t bInterfaceClass;
[; ;usb_ch9.h: 218: uint8_t bInterfaceSubclass;
[; ;usb_ch9.h: 219: uint8_t bInterfaceProtocol;
[; ;usb_ch9.h: 220: uint8_t iInterface;
[; ;usb_ch9.h: 221: };
[; ;usb_ch9.h: 224: struct endpoint_descriptor {
[; ;usb_ch9.h: 226: uint8_t bLength;
[; ;usb_ch9.h: 227: uint8_t bDescriptorType;
[; ;usb_ch9.h: 228: uint8_t bEndpointAddress;
[; ;usb_ch9.h: 229: uint8_t bmAttributes;
[; ;usb_ch9.h: 230: uint16_t wMaxPacketSize;
[; ;usb_ch9.h: 231: uint8_t bInterval;
[; ;usb_ch9.h: 232: };
[; ;usb_ch9.h: 235: struct string_descriptor {
[; ;usb_ch9.h: 236: uint8_t bLength;
[; ;usb_ch9.h: 237: uint8_t bDescriptorType;
[; ;usb_ch9.h: 238: uint16_t chars[];
[; ;usb_ch9.h: 239: };
[; ;usb_ch9.h: 246: struct interface_association_descriptor {
[; ;usb_ch9.h: 247: uint8_t bLength;
[; ;usb_ch9.h: 248: uint8_t bDescriptorType;
[; ;usb_ch9.h: 249: uint8_t bFirstInterface;
[; ;usb_ch9.h: 250: uint8_t bInterfaceCount;
[; ;usb_ch9.h: 251: uint8_t bFunctionClass;
[; ;usb_ch9.h: 252: uint8_t bFunctionSubClass;
[; ;usb_ch9.h: 253: uint8_t bFunctionProtocol;
[; ;usb_ch9.h: 254: uint8_t iFunction;
[; ;usb_ch9.h: 255: };
[; ;usb_descriptors.c: 57: struct configuration_1_packet {
[; ;usb_descriptors.c: 58: struct configuration_descriptor config;
[; ;usb_descriptors.c: 59: struct interface_descriptor interface;
[; ;usb_descriptors.c: 60: struct endpoint_descriptor ep;
[; ;usb_descriptors.c: 61: struct endpoint_descriptor ep1_out;
[; ;usb_descriptors.c: 62: };
"72 usb_descriptors.c
[v _this_device_descriptor `CS6 ~T0 @X0 1 e ]
[i _this_device_descriptor
:U ..
:U ..
"74
-> -> # `S6 `ui `uc
"75
-> . `E246 0 `uc
"76
-> -> 512 `i `ui
"77
-> -> 0 `i `uc
"78
-> -> 0 `i `uc
"79
-> -> 0 `i `uc
"80
-> -> 8 `i `uc
"81
-> 41120 `ui
"82
-> -> 2 `i `ui
"84
-> -> 1 `i `ui
"85
-> -> 1 `i `uc
"86
-> -> 2 `i `uc
"87
-> -> 3 `i `uc
"89
-> -> 1 `i `uc
..
..
]
[; ;usb_descriptors.c: 72: const  struct device_descriptor this_device_descriptor =
[; ;usb_descriptors.c: 73: {
[; ;usb_descriptors.c: 74: sizeof(struct device_descriptor),
[; ;usb_descriptors.c: 75: DESC_DEVICE,
[; ;usb_descriptors.c: 76: 0x0200,
[; ;usb_descriptors.c: 77: 0x00,
[; ;usb_descriptors.c: 78: 0x00,
[; ;usb_descriptors.c: 79: 0x00,
[; ;usb_descriptors.c: 80: 8,
[; ;usb_descriptors.c: 81: 0xA0A0,
[; ;usb_descriptors.c: 82: 0x0002,
[; ;usb_descriptors.c: 84: 0x0001,
[; ;usb_descriptors.c: 85: 1,
[; ;usb_descriptors.c: 86: 2,
[; ;usb_descriptors.c: 87: 3,
[; ;usb_descriptors.c: 88: 1
[; ;usb_descriptors.c: 89: };
"100
[v _configuration_1 `CS14 ~T0 @X0 1 s ]
[i _configuration_1
:U ..
:U ..
:U ..
:U ..
"104
-> -> # `S7 `ui `uc
"105
-> . `E246 1 `uc
"106
-> # _configuration_1 `ui
"107
-> -> 1 `i `uc
"108
-> -> 1 `i `uc
"109
-> -> 2 `i `uc
"110
-> -> 128 `i `uc
"111
-> / -> 100 `i -> 2 `i `uc
..
..
:U ..
:U ..
"116
-> -> # `S10 `ui `uc
"117
-> . `E246 3 `uc
"118
-> -> 0 `i `uc
"119
-> -> 0 `i `uc
"120
-> -> 2 `i `uc
"121
-> -> 255 `i `uc
"122
-> -> 0 `i `uc
"123
-> -> 0 `i `uc
"124
-> -> 2 `i `uc
..
..
:U ..
:U ..
"129
-> -> # `S11 `ui `uc
"130
-> . `E246 4 `uc
"131
-> | -> 1 `i -> 128 `i `uc
"132
-> . `E263 2 `uc
"133
-> -> 64 `i `ui
"134
-> -> 1 `i `uc
..
..
:U ..
:U ..
"139
-> -> # `S11 `ui `uc
"140
-> . `E246 4 `uc
"141
-> -> 1 `i `uc
"142
-> . `E263 2 `uc
"143
-> -> 64 `i `ui
"144
-> -> 1 `i `uc
..
..
..
..
]
[; ;usb_descriptors.c: 100: static const  struct configuration_1_packet configuration_1 =
[; ;usb_descriptors.c: 101: {
[; ;usb_descriptors.c: 102: {
[; ;usb_descriptors.c: 104: sizeof(struct configuration_descriptor),
[; ;usb_descriptors.c: 105: DESC_CONFIGURATION,
[; ;usb_descriptors.c: 106: sizeof(configuration_1),
[; ;usb_descriptors.c: 107: 1,
[; ;usb_descriptors.c: 108: 1,
[; ;usb_descriptors.c: 109: 2,
[; ;usb_descriptors.c: 110: 0b10000000,
[; ;usb_descriptors.c: 111: 100/2,
[; ;usb_descriptors.c: 112: },
[; ;usb_descriptors.c: 114: {
[; ;usb_descriptors.c: 116: sizeof(struct interface_descriptor),
[; ;usb_descriptors.c: 117: DESC_INTERFACE,
[; ;usb_descriptors.c: 118: 0x0,
[; ;usb_descriptors.c: 119: 0x0,
[; ;usb_descriptors.c: 120: 0x2,
[; ;usb_descriptors.c: 121: 0xff,
[; ;usb_descriptors.c: 122: 0x00,
[; ;usb_descriptors.c: 123: 0x00,
[; ;usb_descriptors.c: 124: 0x02,
[; ;usb_descriptors.c: 125: },
[; ;usb_descriptors.c: 127: {
[; ;usb_descriptors.c: 129: sizeof(struct endpoint_descriptor),
[; ;usb_descriptors.c: 130: DESC_ENDPOINT,
[; ;usb_descriptors.c: 131: 0x01 | 0x80,
[; ;usb_descriptors.c: 132: EP_BULK,
[; ;usb_descriptors.c: 133: 64,
[; ;usb_descriptors.c: 134: 1,
[; ;usb_descriptors.c: 135: },
[; ;usb_descriptors.c: 137: {
[; ;usb_descriptors.c: 139: sizeof(struct endpoint_descriptor),
[; ;usb_descriptors.c: 140: DESC_ENDPOINT,
[; ;usb_descriptors.c: 141: 0x01 ,
[; ;usb_descriptors.c: 142: EP_BULK,
[; ;usb_descriptors.c: 143: 64,
[; ;usb_descriptors.c: 144: 1,
[; ;usb_descriptors.c: 145: },
[; ;usb_descriptors.c: 146: };
"160
[v _str00 `CS15 ~T0 @X0 1 s ]
[i _str00
:U ..
:U ..
"161
-> -> # _str00 `ui `uc
"162
-> . `E246 2 `uc
"164
-> -> 1033 `i `ui
..
..
]
[; ;usb_descriptors.c: 160: static const  struct {uint8_t bLength;uint8_t bDescriptorType; uint16_t lang; } str00 = {
[; ;usb_descriptors.c: 161: sizeof(str00),
[; ;usb_descriptors.c: 162: DESC_STRING,
[; ;usb_descriptors.c: 163: 0x0409
[; ;usb_descriptors.c: 164: };
"166
[v _vendor_string `CS16 ~T0 @X0 1 s ]
[i _vendor_string
:U ..
:U ..
"167
-> -> # _vendor_string `ui `uc
"168
-> . `E246 2 `uc
:U ..
"169
-> 67 `ui
-> 111 `ui
-> 67 `ui
-> 111 `ui
-> 111 `ui
-> 78 `ui
-> 32 `ui
-> 114 `ui
-> 101 `ui
-> 115 `ui
-> 101 `ui
-> 97 `ui
-> 114 `ui
-> 99 `ui
-> 104 `ui
-> 32 `ui
-> 103 `ui
-> 114 `ui
-> 111 `ui
-> 117 `ui
-> 112 `ui
..
..
..
]
[; ;usb_descriptors.c: 166: static const  struct {uint8_t bLength;uint8_t bDescriptorType; uint16_t chars[21]; } vendor_string = {
[; ;usb_descriptors.c: 167: sizeof(vendor_string),
[; ;usb_descriptors.c: 168: DESC_STRING,
[; ;usb_descriptors.c: 169: {'C','o','C','o','o','N',' ','r','e','s','e','a','r','c','h',' ','g','r','o','u','p'}
[; ;usb_descriptors.c: 170: };
"172
[v _product_string `CS17 ~T0 @X0 1 s ]
[i _product_string
:U ..
:U ..
"173
-> -> # _product_string `ui `uc
"174
-> . `E246 2 `uc
:U ..
"175
-> 85 `ui
-> 83 `ui
-> 66 `ui
-> 32 `ui
-> 80 `ui
-> 111 `ui
-> 116 `ui
-> 101 `ui
-> 110 `ui
-> 116 `ui
-> 105 `ui
-> 111 `ui
-> 115 `ui
-> 116 `ui
-> 97 `ui
-> 116 `ui
-> 47 `ui
-> 103 `ui
-> 97 `ui
-> 108 `ui
-> 118 `ui
-> 97 `ui
-> 110 `ui
-> 111 `ui
-> 115 `ui
-> 116 `ui
-> 97 `ui
-> 116 `ui
..
..
..
]
[; ;usb_descriptors.c: 172: static const  struct {uint8_t bLength;uint8_t bDescriptorType; uint16_t chars[28]; } product_string = {
[; ;usb_descriptors.c: 173: sizeof(product_string),
[; ;usb_descriptors.c: 174: DESC_STRING,
[; ;usb_descriptors.c: 175: {'U','S','B',' ','P','o','t','e','n','t','i','o','s','t','a','t','/','g','a','l','v','a','n','o','s','t','a','t'}
[; ;usb_descriptors.c: 176: };
"178
[v _interface_string `CS18 ~T0 @X0 1 s ]
[i _interface_string
:U ..
:U ..
"179
-> -> # _interface_string `ui `uc
"180
-> . `E246 2 `uc
:U ..
"181
-> 73 `ui
-> 110 `ui
-> 116 `ui
-> 101 `ui
-> 114 `ui
-> 102 `ui
-> 97 `ui
-> 99 `ui
-> 101 `ui
-> 32 `ui
-> 49 `ui
..
..
..
]
[; ;usb_descriptors.c: 178: static const  struct {uint8_t bLength;uint8_t bDescriptorType; uint16_t chars[11]; } interface_string = {
[; ;usb_descriptors.c: 179: sizeof(interface_string),
[; ;usb_descriptors.c: 180: DESC_STRING,
[; ;usb_descriptors.c: 181: {'I','n','t','e','r','f','a','c','e',' ','1'}
[; ;usb_descriptors.c: 182: };
"184
[v _serial_string `CS19 ~T0 @X0 1 s ]
[i _serial_string
:U ..
:U ..
"185
-> -> # _serial_string `ui `uc
"186
-> . `E246 2 `uc
:U ..
"187
-> 48 `ui
-> 48 `ui
-> 48 `ui
-> 49 `ui
..
..
..
]
[; ;usb_descriptors.c: 184: static const  struct {uint8_t bLength;uint8_t bDescriptorType; uint16_t chars[4]; } serial_string = {
[; ;usb_descriptors.c: 185: sizeof(serial_string),
[; ;usb_descriptors.c: 186: DESC_STRING,
[; ;usb_descriptors.c: 187: {'0','0','0','1'}
[; ;usb_descriptors.c: 188: };
"201
[v _usb_application_get_string `(i ~T0 @X0 1 ef2`uc`**Cv ]
{
[; ;usb_descriptors.c: 200: int16_t usb_application_get_string(uint8_t string_number, const void **ptr)
[; ;usb_descriptors.c: 201: {
[e :U _usb_application_get_string ]
[v _string_number `uc ~T0 @X0 1 r1 ]
[v _ptr `**Cv ~T0 @X0 1 r2 ]
[f ]
[; ;usb_descriptors.c: 202: if (string_number == 0) {
"202
[e $ ! == -> _string_number `i -> 0 `i 21  ]
{
[; ;usb_descriptors.c: 203: *ptr = &str00;
"203
[e = *U _ptr -> &U _str00 `*Cv ]
[; ;usb_descriptors.c: 204: return sizeof(str00);
"204
[e ) -> -> # _str00 `ui `i ]
[e $UE 20  ]
"205
}
[; ;usb_descriptors.c: 205: }
[e $U 22  ]
"206
[e :U 21 ]
[; ;usb_descriptors.c: 206: else if (string_number == 1) {
[e $ ! == -> _string_number `i -> 1 `i 23  ]
{
[; ;usb_descriptors.c: 207: *ptr = &vendor_string;
"207
[e = *U _ptr -> &U _vendor_string `*Cv ]
[; ;usb_descriptors.c: 208: return sizeof(vendor_string);
"208
[e ) -> -> # _vendor_string `ui `i ]
[e $UE 20  ]
"209
}
[; ;usb_descriptors.c: 209: }
[e $U 24  ]
"210
[e :U 23 ]
[; ;usb_descriptors.c: 210: else if (string_number == 2) {
[e $ ! == -> _string_number `i -> 2 `i 25  ]
{
[; ;usb_descriptors.c: 211: *ptr = &product_string;
"211
[e = *U _ptr -> &U _product_string `*Cv ]
[; ;usb_descriptors.c: 212: return sizeof(product_string);
"212
[e ) -> -> # _product_string `ui `i ]
[e $UE 20  ]
"213
}
[; ;usb_descriptors.c: 213: }
[e $U 26  ]
"214
[e :U 25 ]
[; ;usb_descriptors.c: 214: else if (string_number == 3) {
[e $ ! == -> _string_number `i -> 3 `i 27  ]
{
[; ;usb_descriptors.c: 215: *ptr = &serial_string;
"215
[e = *U _ptr -> &U _serial_string `*Cv ]
[; ;usb_descriptors.c: 216: return sizeof(serial_string);
"216
[e ) -> -> # _serial_string `ui `i ]
[e $UE 20  ]
"217
}
[e :U 27 ]
"219
[e :U 26 ]
[e :U 24 ]
[e :U 22 ]
[; ;usb_descriptors.c: 217: }
[; ;usb_descriptors.c: 219: return -1;
[e ) -U -> 1 `i ]
[e $UE 20  ]
[; ;usb_descriptors.c: 220: }
"220
[e :UE 20 ]
}
"233
[v _usb_application_config_descs `*CS7 ~T0 @X0 -> 0 `x e ]
[i _usb_application_config_descs
:U ..
"235
-> -> &U _configuration_1 `*S7 `*CS7
..
]
[; ;usb_descriptors.c: 233: const struct configuration_descriptor *usb_application_config_descs[] =
[; ;usb_descriptors.c: 234: {
[; ;usb_descriptors.c: 235: (struct configuration_descriptor*) &configuration_1,
[; ;usb_descriptors.c: 236: };
[; ;usb_descriptors.c: 237: typedef char STATIC_SIZE_CHECK_LINE_237 [((sizeof(usb_application_config_descs)/sizeof(*usb_application_config_descs))==1)?1:-1];
[; ;usb_descriptors.c: 238: typedef char STATIC_SIZE_CHECK_LINE_238 [(sizeof(this_device_descriptor)==18)?1:-1];
